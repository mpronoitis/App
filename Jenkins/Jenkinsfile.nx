pipeline {
  //agent { label 'jenkins_label' }
  agent any
  environment{
    timestamp = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone('UTC'))
  }
  stages {
  stage('Init Github Check') {
        steps {
          withCredentials([usernamePassword(credentialsId: 'github-app-playsystems',
                                            usernameVariable: 'GITHUB_APP',
                                            passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
              sh '''
              curl -H "Content-Type: application/json" \
                   -H "Accept: application/vnd.github.antiope-preview+json" \
                   -H "authorization: Bearer ${GITHUB_ACCESS_TOKEN}" \
                   -d '{ "name": "NX Checks", \
                         "head_sha": "'${GIT_COMMIT}'", \
                         "status": "in_progress", \
                         "external_id": "33", \
                         "started_at": "'${timestamp}'", \
                         "output": { "title": "NX Checks are running!", \
                                     "summary": "You will be notified when the run has been completed!"}}' https://api.github.com/repos/PlaySystems-Integrator/Play.App/check-runs
              '''
          }
        }
      }
  stage('cleanup') {
        steps {
          //delete /usr/local/lib/node_modules/npm
          sh 'rm -rf /usr/local/lib/node_modules/npm'
        }
      }
  stage('install node and npm') {
    steps {
      sh 'apt-get update -y'
      sh 'apt-get --yes --force-yes -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade'
      sh 'apt-get --yes --force-yes -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade'
      //install nodejs 18.12.1
      sh 'apt-get install -y curl'
      sh 'curl -sL https://deb.nodesource.com/setup_18.x | bash -'
      sh 'apt-get install -y nodejs'
      sh 'node -v'
      sh 'npm install -g npm --force'
      sh 'apt autoremove -y'
    }
  }

  stage('install dependencies') {
    steps {
      //delete npm-shrinkwrap.json
      sh 'rm -rf npm-shrinkwrap.json'
      sh 'npm i'
    }
  }
  stage('install nx cli') {
    steps {
      sh 'npm install -g nx@latest'
    }
  }
  stage('run lint') {
    steps {
      sh 'npx nx-cloud record nx run-many --target=lint --all --parallel'
    }
   }
   stage('run tests'){
    steps {
      sh 'npx nx-cloud record nx run-many --target=test --all --parallel'
    }
   }
    stage('Update Github Checks') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'github-app-playsystems',
                                          usernameVariable: 'GITHUB_APP',
                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
            sh '''
            curl -H "Content-Type: application/json" \
                 -H "Accept: application/vnd.github.antiope-preview+json" \
                 -H "authorization: Bearer ${GITHUB_ACCESS_TOKEN}" \
                 -d '{ "name": "NX Checks", \
                       "head_sha": "'${GIT_COMMIT}'", \
                       "status": "completed", \
                       "external_id": "33", \
                       "conclusion": "success", \
                       "started_at": "'${timestamp}'", \
                       "output": { "title": "NX Checks have passed!", \
                                   "summary": "Format is ok! Lint is ok! Tests are ok!"}}' https://api.github.com/repos/PlaySystems-Integrator/Play.App/check-runs
            '''
        }
      }
    }
}
 //if anything fails update Github Checks as failed
  post {
    failure {
      withCredentials([usernamePassword(credentialsId: 'github-app-playsystems',
                                        usernameVariable: 'GITHUB_APP',
                                        passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
          sh '''
          curl -H "Content-Type: application/json" \
               -H "Accept: application/vnd.github.antiope-preview+json" \
               -H "authorization: Bearer ${GITHUB_ACCESS_TOKEN}" \
               -d '{ "name": "NX Checks", \
                     "head_sha": "'${GIT_COMMIT}'", \
                     "status": "completed", \
                     "external_id": "33", \
                     "conclusion": "failure", \
                     "started_at": "'${timestamp}'", \
                     "output": { "title": "NX Checks have failed!", \
                                 "summary": "Format is not ok! Lint is not ok! Tests are not ok!"}}' https://api.github.com/repos/PlaySystems-Integrator/Play.App/check-runs
          '''
      }
    }
  }
}
